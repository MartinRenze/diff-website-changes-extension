!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.HtmlDiff=t():e.HtmlDiff=t()}(self,(function(){return(()=>{"use strict";var e={718:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=n(713),s=n(98),i=n(675),o=n(823),l=new Map([["</strong>",0],["</em>",0],["</b>",0],["</i>",0],["</big>",0],["</small>",0],["</u>",0],["</sub>",0],["</strike>",0],["</s>",0],["</dfn>",0]]),d=/<((strong)|(b)|(i)|(dfn)|(em)|(big)|(small)|(u)|(sub)|(sup)|(strike)|(s))[>\s]+/gi,a=(e,t,n,r)=>`${u(e,"diffmod",t,r)}${c(e,"diffmod",n,r)}`,c=(e,t,n,r)=>{const s=n.filter(((t,n)=>n>=e.startInNew&&n<e.endInNew));return h("ins",t,s,r)},u=(e,t,n,r)=>{const s=n.filter(((t,n)=>n>=e.startInOld&&n<e.endInOld));return h("del",t,s,r)},f=(e,t)=>t.filter(((t,n)=>n>=e.startInNew&&n<e.endInNew)).join(""),h=(e,t,n,r)=>{const s=[];for(;n.length;){const o=p(n,(e=>!i.isTag(e)));let a="",c=!1;if(0!==o.length){const n=i.wrapText(o.join(""),e,t);s.push(n)}else{if(d.test(n[0])){const t=n[0].match(d);if(null!==t){const e="<"+t[0].replace(/(<|>| )/g,"")+">";r.push(e)}if(a='<ins class="mod">',"del"===e)for(n.shift();n.length>0&&d.test(n[0]);)n.shift()}else if(l.has(n[0])){const t=0===r.length?null:r.pop();if(null!==t&&t===n[n.length-1].replace(/\//g,"")&&(a="</ins>",c=!0),"del"===e)for(n.shift();n.length>0&&l.has(n[0]);)n.shift()}if(0===n.length&&0===a.length)break;c?s.push(a+p(n,i.isTag).join("")):s.push(p(n,i.isTag).join("")+a)}}return s.join("")},p=(e,t)=>{let n=0,r=!1;for(let s=0;s<e.length;s++){const i=e[s];if(0===s&&" "===i&&(e[s]="&nbsp;"),!t(i)){n=s,r=!0;break}}if(r){const t=e.filter(((e,t)=>t>=0&&t<n));return n>0&&e.splice(0,n),t}{const t=e.filter(((t,n)=>n>=0&&n<e.length));return e.splice(0,e.length),t}},g=(e,t,n)=>{const r=[],s=e=>i.isWhiteSpace(t.filter(((t,n)=>n>=e.startInOld&&n<e.endInOld)).join(""))&&i.isWhiteSpace(n.filter(((t,n)=>n>=e.startInNew&&n<e.endInNew)).join("")),o=e[e.length-1];for(let t=0;t<e.length;t++){const n=e[t];if("replace"===n.action){let i=!1;for(let o=t+1;o<e.length;o++){const l=e[o];if("replace"!==l.action&&"equal"===l.action&&!s(l)){r.push({action:"replace",startInOld:n.startInOld,endInOld:l.startInOld,startInNew:n.startInNew,endInNew:l.startInNew}),t=o-1,i=!0;break}}if(!i){r.push({action:"replace",startInOld:n.startInOld,endInOld:o.endInOld,startInNew:n.startInNew,endInNew:o.endInNew});break}}else r.push(n)}return r},w=(e,t,n,s)=>{const i=[];let o=Object.assign({},r.NoMatch),l=null;for(const d of e){if(null===l){o=Object.assign({},r.NoMatch),l=d;continue}if(o.endInOld===l.startInOld&&o.endInNew===l.startInNew||l.endInOld===d.startInOld&&l.endInNew===d.startInNew){i.push(l),o=l,l=d;continue}const e=(e,t)=>e+t.length,a=t.slice(o.endInOld,d.startInOld).reduce(e,0),c=n.slice(o.endInNew,d.startInNew).reduce(e,0);n.slice(l.startInNew,l.endInNew).reduce(e,0)>Math.max(a,c)*s&&i.push(l),o=l,l=d}return null!==l&&i.push(l),i},I=(e,t,n,r,s)=>O(0,e.length,0,t.length,e,t,n,r,s),O=(e,t,n,r,s,i,o,l,d)=>{if(e>=t||n>=r)return[];const a=W(e,t,n,r,s,i,o,l,d);return null===a?[]:[...O(e,a.startInOld,n,a.startInNew,s,i,o,l,d),a,...O(a.endInOld,t,a.endInNew,r,s,i,o,l,d)]},W=(e,t,n,r,i,o,l,d,a)=>{for(let c=l;c>0;c--){const l={blockSize:c,repeatingWordsAccuracy:d,ignoreWhiteSpaceDifferences:a},u=(0,s.findMatch)(i,o,e,t,n,r,l);if(null!==u)return u}return null};t.default={execute:(e,t,n)=>((e,t,n)=>{var r,s,i,l,d;if(e===t)return t;const{oldWords:h,newWords:p}=((e,t,n)=>({oldWords:o.convertHtmlToListOfWords(e,n),newWords:o.convertHtmlToListOfWords(t,n)}))(e,t,[]),O=Math.min(null!==(r=null==n?void 0:n.matchGranularity)&&void 0!==r?r:4,h.length,p.length),W=((e,t,n,r,s,i,o)=>{let l=0,d=0;const a=[],c=e.length,u=t.length,f=I(e,t,s,i,o);f.push({startInOld:c,startInNew:u,endInOld:c,endInNew:u,size:0});const h=w(f,e,t,r);for(const e of h){if(null===e)continue;const t=l===e.startInOld,n=d===e.startInNew;let r;r=t||n?t&&!n?"insert":t?"none":"delete":"replace","none"!==r&&a.push({action:r,startInOld:l,endInOld:e.startInOld,startInNew:d,endInNew:e.startInNew}),0!==e.size&&a.push({action:"equal",startInOld:e.startInOld,endInOld:e.endInOld,startInNew:e.startInNew,endInNew:e.endInNew}),l=e.endInOld,d=e.endInNew}return n?g(a,e,t):a})(h,p,null!==(s=null==n?void 0:n.combineWords)&&void 0!==s&&s,null!==(i=null==n?void 0:n.orphanMatchThreshold)&&void 0!==i?i:0,O,null!==(l=null==n?void 0:n.repeatingWordsAccuracy)&&void 0!==l?l:1,null!==(d=null==n?void 0:n.ignoreWhiteSpaceDifferences)&&void 0!==d&&d),v=[];return W.map((e=>((e,t,n,r)=>{switch(e.action){case"equal":return f(e,n);case"delete":return u(e,"diffdel",t,r);case"insert":return c(e,"diffins",n,r);case"replace":return a(e,t,n,r);default:return""}})(e,h,p,v))).join("")})(e,t,n)}},713:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.NoMatch=void 0,t.NoMatch={size:0,startInNew:0,endInNew:0,endInOld:0,startInOld:0}},98:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.findMatch=void 0;const r=n(675),s=(e,t,n)=>(e.push(t),e.length>n&&e.shift(),e.length!==n?null:e.join("")),i=(e,t)=>(e=r.stripAnyAttributes(e),t&&r.isWhiteSpace(e)?" ":e);t.findMatch=(e,t,n,r,o,l,d)=>{var a,c;const u=((e,t,n,r)=>{var o;const l=new Map,d=[];for(let a=t;a<n;a++){const t=i(e[a],r.ignoreWhiteSpaceDifferences),n=s(d,t,r.blockSize);null!==n&&(l.has(n)?null===(o=l.get(n))||void 0===o||o.push(a):l.set(n,[a]))}return l})(t,o,l,d);if(0===u.size)return null;let f=n,h=o,p=0,g=new Map;const w=d.blockSize,I=[];for(let t=n;t<r;t++){const n=i(e[t],d.ignoreWhiteSpaceDifferences),r=s(I,n,w);if(null===r)continue;const o=new Map;if(!u.has(r)){g=o;continue}const l=null!==(a=u.get(r))&&void 0!==a?a:[];for(const e of l){const n=(null!==(c=g.get(e-1))&&void 0!==c?c:0)+1;o.set(e,n),n>p&&(f=t-n-w+2,h=e-n-w+2,p=n)}g=o}const O=p+w-1;return 0!==p?{startInOld:f,startInNew:h,endInOld:f+O,endInNew:h+O,size:O}:null}},675:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.isWord=t.stripAnyAttributes=t.isWhiteSpace=t.isEndOfEntity=t.isStartOfEntity=t.isEndOfTag=t.isStartOfTag=t.wrapText=t.stripTagAttributes=t.isTag=void 0;const n=/^\s*<\/?[^>]+>\s*$/,r=/<[^\s>]+/,s=/^(\s|&nbsp;)+$/,i=/(\p{Script_Extensions=Latin}|[\d@#])+/u,o=["<img"],l=e=>!o.some((t=>null!==e&&e.startsWith(t)))&&n.test(e);t.isTag=l;const d=e=>{var t;const n=null===(t=r.exec(e))||void 0===t?void 0:t[0];return n&&(e=n+(e.endsWith("/>")?"/>":">")),e};t.stripTagAttributes=d,t.wrapText=(e,t,n)=>`<${t} class="${n}">${e}</${t}>`,t.isStartOfTag=e=>"<"===e,t.isEndOfTag=e=>">"===e,t.isStartOfEntity=e=>"&"===e,t.isEndOfEntity=e=>";"===e,t.isWhiteSpace=e=>s.test(e),t.stripAnyAttributes=e=>l(e)?d(e):e,t.isWord=e=>i.test(e)},823:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.convertHtmlToListOfWords=void 0;const r=n(675);t.convertHtmlToListOfWords=(e,t)=>{var n;const o={mode:"character",currentWord:[],words:[]},l=i(e,t),d=!!l.size;let a=!1,c=-1;for(let t=0;t<e.length;t++){const i=e[t];if(d){c===t&&(c=-1,a=!1);let e=0;if(l.has(t)&&(e=null!==(n=l.get(t))&&void 0!==n?n:0,a=!0,c=e),a){o.currentWord.push(i),o.mode="character";continue}}switch(o.mode){case"character":r.isStartOfTag(i)?s(o,"<","tag"):r.isStartOfEntity(i)?s(o,i,"entity"):r.isWhiteSpace(i)?s(o,i,"whitespace"):r.isWord(i)&&(0===o.currentWord.length||r.isWord(o.currentWord[o.currentWord.length-1]))?o.currentWord.push(i):s(o,i,"character");break;case"tag":r.isEndOfTag(i)?(o.currentWord.push(i),o.words.push(o.currentWord.join("")),o.currentWord=[],o.mode=r.isWhiteSpace(i)?"whitespace":"character"):o.currentWord.push(i);break;case"whitespace":r.isStartOfTag(i)?s(o,i,"tag"):r.isStartOfEntity(i)?s(o,i,"entity"):r.isWhiteSpace(i)?o.currentWord.push(i):s(o,i,"character");break;case"entity":if(r.isStartOfTag(i))s(o,i,"tag");else if(r.isWhiteSpace(i))s(o,i,"whitespace");else if(r.isEndOfEntity(i)){let e=!0;if(0!==o.currentWord.length&&(o.currentWord.push(i),o.words.push(o.currentWord.join("")),o.words.length>2&&r.isWhiteSpace(o.words[o.words.length-2])&&r.isWhiteSpace(o.words[o.words.length-1]))){const t=o.words[o.words.length-2],n=o.words[o.words.length-1];o.words.splice(o.words.length-2,2),o.currentWord=[t,n],o.mode="whitespace",e=!1}e&&(o.currentWord=[],o.mode="character")}else r.isWord(i)?o.currentWord.push(i):s(o,i,"character")}}return 0!==o.currentWord.length&&o.words.push(o.currentWord.join("")),o.words};const s=(e,t,n)=>{0!==e.currentWord.length&&e.words.push(e.currentWord.join("")),e.currentWord=[t],e.mode=n},i=(e,t)=>{const n=new Map;if(null===t)return n;for(const r of t){let t;for(;null!==(t=r.exec(e));){if(n.has(t.index))throw new Error("One or more block expressions result in a text sequence that overlaps. Current expression: "+r.toString());n.set(t.index,t.index+t[0].length)}}return n}}},t={};function n(r){var s=t[r];if(void 0!==s)return s.exports;var i=t[r]={exports:{}};return e[r](i,i.exports,n),i.exports}var r={};return(()=>{var e=r;Object.defineProperty(e,"__esModule",{value:!0}),e.Diff=void 0;var t=n(718);Object.defineProperty(e,"Diff",{enumerable:!0,get:function(){return t.default}})})(),r})()}));